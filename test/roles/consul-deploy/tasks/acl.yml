---
# File: tasks/acl.yml - ACL tasks for Consul

- name: save
  set_fact: moshe=dasdsa dasas=324432

- block:
  - name: Generate ACL master token
    command: "uuidgen -r"
    register: consul_acl_master_token_keygen
    run_once: true
  - name: Save ACL master yoken
    set_fact:
      consul_acl_master_token: "{{ consul_acl_master_token_keygen.stdout }}"
  when: consul_acl_master_token is not defined and not bootstrap_marker.stat.exists

- name: Display ACL Master Token
  debug: 
    msg: "{{ consul_acl_master_token }} and {{ consul_acl_master_token_display }}"
    verbosity: 1 
  run_once: true
  when: consul_acl_master_token_display

- block:
  - name: Generate ACL replication token
    command: "uuidgen -r"
    register: consul_acl_replication_token_keygen
    run_once: true
  - name: Save ACL replication yoken
    set_fact:
      consul_acl_replication_token: "{{ consul_acl_replication_token_keygen.stdout }}"
  when: (consul_acl_replication_token is not defined or consul_acl_replication_token == '') and not bootstrap_marker.stat.exists

- name: Display ACL Replication Token
  debug:
    msg: "{{ consul_acl_replication_token }}"
  run_once: true
  when: consul_acl_replication_token_display

- name: ACL bootstrap configuration
  template:
    src: config_acl.json.j2
    dest: "{{ consul_config_path }}/{{ item }}/config_acl.json"
    owner: "{{ consul_user }}"
    group: "{{ consul_group}}"
  with_items:
    - bootstrap
    - client
    - server
  notify:
    - restart consul

- name: ACL policy configuration
  template:
    src: config_acl_policy.hcl.j2
    dest: "{{ consul_config_path }}/{{ item }}/config_acl_policy.hcl"
    owner: "{{ consul_user }}"
    group: "{{ consul_group}}"
  with_items:
    - bootstrap
    - client
    - server
  notify:
    - restart consul
