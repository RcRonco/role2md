---
# File: tasks/install.yml - package installation tasks for vault

- name: OS packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ vault_os_packages }}"
  tags: installation

- name: Check Vault package checksum file
  become: no
  connection: local
  stat:
    path: "{{ role_path }}/files/vault_{{ vault_version }}_SHA256SUMS"
  run_once: true
  register: vault_checksum

- name: Get Vault package checksum file
  become: no
  connection: local
  get_url:
    url: "{{ vault_checksum_file_url }}"
    dest: "{{ role_path }}/files/vault_{{ vault_version }}_SHA256SUMS"
  run_once: true
  tags: installation
  when: vault_checksum.stat.exists == False

- name: Get Vault package checksum
  become: no
  connection: local
  shell: "grep {{ vault_pkg }} {{ role_path }}/files/vault_{{ vault_version }}_SHA256SUMS"
  run_once: true
  register: vault_sha256
  tags: installation

- name: Check Vault package file
  become: no
  connection: local
  stat:
    path: "{{ role_path }}/files/{{ vault_pkg }}"
  run_once: true
  register: vault_package

- name: Download Vault
  become: no
  connection: local
  get_url:
    url: "{{ vault_zip_url }}"
    dest: "{{ role_path }}/files/{{ vault_pkg }}"
    checksum: "sha256:{{ vault_sha256.stdout.split(' ')|first }}"
    timeout: "42"
  run_once: true
  tags: installation
  when: vault_package.stat.exists == False

- name: Unarchive Vault
  become: no
  connection: local
  unarchive:
    src: "{{ role_path }}/files/{{ vault_pkg }}"
    dest: "{{ role_path }}/files/"
    creates: "{{ role_path }}/files/vault"
  run_once: true
  tags: installation

- name: Install Vault
  copy:
    src: "{{ role_path }}/files/vault"
    dest: "{{ vault_bin_path }}"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: "0755"
  tags: installation

- name: Cleanup
  become: no
  connection: local
  file:
    dest: "{{ role_path }}/files/vault*"
    state: absent
  run_once: true
  tags: installation
